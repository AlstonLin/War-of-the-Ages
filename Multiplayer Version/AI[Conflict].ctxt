#BlueJ class context
comment0.params=user\ game
comment0.target=AI(Player,\ Game)
comment0.text=\r\n\ Creates\ a\ new\ AI\ that\ will\ run\ concurrently\ with\ the\ Game\ for\ efficiency.\r\n\ \r\n\ @param\ user\ The\ opponent\ of\ this\ Player\r\n
comment1.params=
comment1.target=void\ run()
comment10.params=
comment10.target=void\ spawnArmy()
comment10.text=\r\n\ -\ Trains\ an\ army\ randomly\r\n
comment11.params=
comment11.target=void\ deployArmy()
comment11.text=\r\n\ -\ Compare\ the\ sizes\ of\ the\ two\ armies\r\n\ -\ Launch\ army\ to\ attack\ enemy\ units\ if\ the\ AI\ has\ more\ troops;\ otherwise\ attack\ civilians\r\n
comment12.params=
comment12.target=boolean\ enoughSpace()
comment12.text=\r\n\ @return\ \ if\ there\ is\ enough\ population\ space\ for\ another\ building\ or\ not\r\n
comment13.params=foodCost\ woodCost\ goldCost
comment13.target=boolean\ enoughResources(int,\ int,\ int)
comment13.text=\r\n\ Check\ if\ there\ are\ enough\ resources\ to\ train\ a\ unit\r\n
comment14.params=
comment14.target=void\ finalize()
comment14.text=\r\n\ Stops\ the\ updateThread\ before\ the\ GC\ erases\ this\ object.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Entry\ point\ for\ the\ AI.\r\n
comment3.params=
comment3.target=void\ matchUser()
comment3.text=\r\n\ Determines\ what\ needs\ to\ be\ done.\r\n
comment4.params=
comment4.target=void\ manageCivilians()
comment4.text=\r\n\ Manages\ the\ idle\ civilians\r\n
comment5.params=unit\ type
comment5.target=Cell\ getNearestCell(Unit,\ java.lang.Class)
comment5.text=\r\n\ Finds\ the\ Cell\ of\ the\ given\ type\ nearest\ to\ the\ given\ unit.\r\n\ \r\n\ @param\ unit\ The\ Unit\ to\ find\ a\ Cell\ close\ to\r\n\ @param\ type\ The\ Class\ of\ the\ type\ of\ Cell\ to\ find\r\n
comment6.params=map
comment6.target=Cell\ getNearbyGrass(Map)
comment6.text=\r\n\ Finds\ a\ Cell\ of\ Grass\ to\ build\ on\ near\ the\ base\ (Center).\r\n\ \r\n\ @param\ map\ The\ Map\ to\ find\ the\ Cell\ on\r\n\ @return\ a\ Cell\ that\ the\ AI\ can\ build\ on\r\n
comment7.params=stream
comment7.target=void\ readObject(java.io.ObjectInputStream)
comment7.text=\r\n\ Called\ during\ deserialization\ to\ restore\ transient\ fields.\r\n\ \r\n\ @param\ stream\ \ \ \ The\ input\ stream\ given\ during\ deserialization\r\n
comment8.params=
comment8.target=void\ run()
comment9.params=building
comment9.target=void\ place(int)
comment9.text=\r\n\ Places\ a\ building\ close\ to\ the\ town\ center.\r\n\ \r\n\ @param\ \ \ building\ \ \ \ The\ building\ that\ needs\ to\ be\ built\r\n
numComments=15
