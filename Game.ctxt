#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ Entry\ point\ of\ the\ program\ and\ initializes\ all\ major\ components.\r\n\ \r\n\ @author\ Alston\ Lin,\ Jesmin\ Hondell\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Constructor\ for\ a\ single\ player\ Game;\ there\ should\ only\ be\ one\ instance\ of\ this\r\n\ at\ any\ given\ time.\r\n
comment10.params=
comment10.target=void\ handleUpdates()
comment10.text=\r\n\ Used\ in\ multiplayer\ mode\ for\ clients;\ handles\ any\ updates\ from\ the\ server.\r\n\ This\ method\ is\ only\ to\ be\ used\ concurrently.\r\n
comment11.params=data
comment11.target=void\ changeCell(java.lang.Object[])
comment11.text=\r\n\ Changes\ the\ given\ Cell\ on\ the\ Map\ for\ multiplayer\ mode.\r\n\ \r\n\ @param\ data\ \ \ \ \ \ The\ data\ on\ the\ change\r\n
comment12.params=toClone
comment12.target=Cell\ cloneCell(Cell)
comment12.text=\r\n\ Clones\ the\ given\ Cell\ to\ create\ a\ version\ that\ will\ work\ with\ this\ Game,\r\n\ for\ multiplayer\ purposes.\r\n\ \r\n\ @param\ toClone\ \ \ The\ cell\ to\ clone\r\n\ @return\ \ \ \ \ \ \ \ \ \ The\ cloned\ Cell\r\n
comment13.params=unit
comment13.target=void\ createUnit(Unit)
comment13.text=\r\n\ Creates\ a\ clone\ Unit\ in\ this\ World\ based\ on\ the\ given\ Unit;\r\n\ for\ multiplayer\ mode\ only.\r\n
comment14.params=otherPlayer
comment14.target=Player\ getTwinPlayer(Player)
comment14.text=\r\n\ Gets\ this\ Game's\ version\ of\ the\ given\ player;\ for\ multiplayer\ purposes.\r\n\ \r\n\ @param\ otherPlayer\ \ \ The\ Player\ from\ the\ other\ Game\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ Game's\ version\ of\ the\ player\r\n
comment15.params=update
comment15.target=void\ sendUpdate(Update)
comment15.text=\r\n\ Sends\ an\ update\ to\ all\ the\ clients\ in\ multiplayer\ mode.\r\n\ \r\n\ @param\ update\ \ \ \ The\ update\ to\ send\r\n
comment16.params=request
comment16.target=void\ sendRequest(Request)
comment16.text=\r\n\ Sends\ a\ request\ to\ the\ server\ in\ multiplayer\ mode.\r\n\ \r\n\ @param\ request\ \ \ The\ request\ to\ send\r\n
comment17.params=otherUnit
comment17.target=Unit\ getTwinUnit(Unit)
comment17.text=\r\n\ Finds\ this\ Game's\ version\ of\ the\ given\ unit,\ for\r\n\ multiplayer\ purposes.\r\n\ \r\n\ @param\ otherUnit\ \ \ \ \ The\ Unit\ that\ deos\ not\ belong\ to\ this\ Game\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ This\ Game's\ version\ of\ the\ Unit\r\n
comment18.params=
comment18.target=void\ handleRequests()
comment18.text=\ \r\n\ Used\ in\ multiplayer\ mode\ for\ servers;\ handles\ any\ requests\ from\ the\ client.\r\n\ This\ method\ is\ only\ to\ be\ used\ concurrently.\r\n
comment19.params=data
comment19.target=void\ selectUnits(java.lang.Object[])
comment19.text=\r\n\ Selects\ the\ Units\ to\ the\ appropriate\ Object\ based\r\n\ on\ the\ data\ provided.\r\n\ \r\n\ @param\ data\ \ \ \ \ \ An\ Object\ of\ raw\ information\r\n
comment2.params=serverSocket\ inStreams\ outStreams
comment2.target=Game(java.net.ServerSocket,\ java.util.List,\ java.util.List)
comment2.text=\r\n\ Creates\ a\ new\ multiplayer\ game,\ where\ this\ side\ is\ the\ server.\r\n\ \r\n\ @param\ socket\ \ \ \ \ \ \ \ The\ connection\ socket\ of\ the\ server\r\n\ @param\ inStreams\ \ \ \ \ A\ List\ of\ the\ input\ streams\ to\ all\ the\ clients\r\n\ @param\ outStreams\ \ \ \ A\ List\ of\ output\ streams\ to\ all\ the\ clients\r\n
comment20.params=
comment20.target=void\ setupMultiplayerMap()
comment20.text=\r\n\ Sets\ up\ the\ map\ for\ multiplayer.\r\n
comment21.params=
comment21.target=void\ setupUI()
comment21.text=\ \r\n\ Sets\ up\ the\ user\ interface\ Objects,\ including\ the\ placement\ of\ the\ Map,\ panels,\ ect.\r\n
comment22.params=
comment22.target=void\ save()
comment22.text=\r\n\ Saves\ the\ game\ into\ a\ file.\r\n
comment23.params=stream
comment23.target=void\ readObject(java.io.ObjectInputStream)
comment23.text=\r\n\ Called\ during\ deserialization\ to\ restore\ transient\ fields.\r\n\ \r\n\ @param\ stream\ \ \ \ The\ input\ stream\ given\ during\ deserialization\r\n
comment24.params=unit\ cell
comment24.target=void\ spawnUnit(Unit,\ Cell)
comment24.text=\r\n\ Spawns\ the\ given\ Unit\ into\ the\ world.\r\n\ \r\n\ @param\ unit\ \ \ \ \ \ The\ Unit\ to\ spawn\r\n\ @param\ cell\ \ \ \ \ \ The\ Cell\ that\ it\ will\ spawn\ onto\r\n
comment25.params=
comment25.target=void\ restoreUnits()
comment25.text=\r\n\ Restores\ Units\ from\ de-serialization\ by\ adding\ them\r\n\ back\ to\ the\ World.\r\n
comment26.params=
comment26.target=void\ stopped()
comment26.text=\r\n\ Safely\ disconnects\ the\ connection\ and\ data\ streams.\r\n
comment27.params=
comment27.target=Player\ getUser()
comment27.text=\r\n\ Returns\ the\ Player.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ Player\ that\ the\ user\ of\ this\ program\ will\ be\ using\r\n
comment28.params=
comment28.target=Player\ getEnemy()
comment28.text=\r\n\ Returns\ the\ enemy.\r\n\ \r\n\ @return\ \ \ \ \ \ A\ computer-controlled\ Player\ that\ will\ be\ the\ opposing\ force\r\n\ of\ the\ user\r\n
comment29.params=
comment29.target=Map\ getMap()
comment29.text=\r\n\ Returns\ the\ Map.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ Map\ of\ this\ Game\ \r\n
comment3.params=inStream\ outStream
comment3.target=Game(java.io.ObjectInputStream,\ java.io.ObjectOutputStream)
comment3.text=\r\n\ Creates\ a\ new\ multiplayer\ game,\ where\ this\ side\ is\ the\ client.\r\n\ \r\n\ @param\ inStream\ \ \ \ \ \ The\ input\ stream\ to\ the\ server\r\n\ @param\ outStream\ \ \ \ \ The\ output\ stream\ to\ the\ server\r\n
comment30.params=
comment30.target=boolean\ isMultiplayer()
comment30.text=\r\n\ Returns\ if\ this\ game\ is\ in\ multiplayer\ mode.\r\n\ \r\n\ @return\ \ \ \ \ \ If\ this\ game\ is\ in\ multiplayer\ mode\r\n
comment31.params=
comment31.target=boolean\ isHosting()
comment31.text=\r\n\ Returns\ if\ this\ game\ is\ the\ server\ in\ multiplayer\ mode.\r\n\ \r\n\ @return\ \ \ \ \ \ True\ when\ this\ game\ is\ the\ server\ in\ multiplayer\ mode\r\n
comment32.params=
comment32.target=ActionsPanel\ getActionsPanel()
comment32.text=\r\n\ Returns\ the\ ActionsPanel.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ ActionsPanel\ of\ this\ Game\r\n
comment33.params=
comment33.target=InformationPanel\ getInformationPanel()
comment33.text=\r\n\ Returns\ the\ Information\ Panel\ of\ this\ game.\r\n\ \r\n\ @return\ \ \ \ \ \ The\ InformationPanel\ of\ this\ Game\r\n
comment4.params=
comment4.target=void\ configureGreenfoot()
comment4.text=\r\n\ Configures\ Greenfoot\ paint\ and\ act\ orders.\r\n
comment5.params=
comment5.target=void\ setup()
comment5.text=\r\n\ Sets\ up\ the\ major\ components\ of\ the\ game.\ Should\ be\ called\ only\r\n\ upon\ initiation.\r\n
comment6.params=
comment6.target=void\ setupServer()
comment6.text=\r\n\ Sets\ up\ the\ game\ for\ a\ server.\r\n
comment7.params=
comment7.target=void\ run()
comment8.params=
comment8.target=void\ setupClient()
comment8.text=\r\n\ Sets\ up\ the\ game\ for\ a\ client.\r\n
comment9.params=
comment9.target=void\ run()
numComments=34
