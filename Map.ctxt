#BlueJ class context
comment0.target=Map
comment0.text=\r\n\ Displays\ a\ portion\ of\ the\ items\ in\ the\ game,\ taking\ up\ the\ majority\ of\r\n\ the\ screen.\ In\ addition\ to\ displaying\ the\ Cells\ and\ Units,\ this\ class\r\n\ also\ handles\ user\ input\ as\ well.\ \r\n\ \r\n\ @author\ Alston\ Lin\r\n\ @version\ 1.0\r\n
comment1.params=world
comment1.target=Map(greenfoot.World)
comment1.text=\r\n\ Constructor\ for\ the\ Map.\ Scales\ the\ image\ and\ populates\ world\ with\ Cells\r\n\ \r\n\ @param\ world\ \ \ \ \ The\ World\ that\ the\ map\ will\ be\ added\ in\ \r\n
comment10.params=
comment10.target=void\ calculateUnitPositions()
comment10.text=\r\n\ Calculates\ the\ new\ position\ for\ all\ Units\ after\r\n\ the\ map\ has\ changed.\r\n
comment11.params=
comment11.target=void\ update()
comment11.text=\r\n\ Updates\ the\ map\ according\ to\ the\ current\ viewing\ area.\r\n
comment12.params=
comment12.target=int\ getCellSize()
comment12.text=\r\n\ Returns\ the\ cell\ size\r\n\ \r\n\ @return\ \ \ \ \ \ The\ size\ of\ each\ side\ of\ a\ cell\r\n
comment13.params=change
comment13.target=void\ changeCellSize(int)
comment13.text=\r\n\ Changes\ the\ size\ of\ the\ sides\ of\ each\ cell\ by\ the\ given\ amount,\ \r\n\ if\ possible.\ \r\n\ \r\n\ @param\ change\ \ \ \ \ \ The\ change\ in\ cell\ size\r\n
comment14.params=x\ y\ cell
comment14.target=void\ setCell(int,\ int,\ Cell)
comment14.text=\r\n\ Sets\ the\ cell\ at\ the\ given\ coordinates\ to\ the\ given\ Cell\r\n\ \r\n\ @param\ x\ \ \ \ \ \ \ \ \ The\ x\ co-ordinate\ of\ the\ Cell\r\n\ @param\ y\ \ \ \ \ \ \ \ \ The\ y\ co-ordinate\ of\ the\ Cell\r\n\ @param\ cell\ \ \ \ \ \ The\ Cell\ object\r\n
comment15.params=x\ y\ cell
comment15.target=void\ setClientCell(int,\ int,\ Cell)
comment15.text=\r\n\ Sets\ the\ Cell\ at\ the\ given\ coordinates\ for\ clients\ in\ multiplayer\r\n\ mode.\r\n\ \r\n\ @param\ x\ \ \ \ \ The\ x\ coordinate\ on\ the\ map\r\n\ @param\ y\ \ \ \ \ The\ y\ coordiante\ on\ the\ map\r\n\ @param\ cell\ \ The\ Cell\ object\r\n
comment16.params=
comment16.target=boolean\ getChanged()
comment16.text=\r\n\ Returns\ if\ the\ Map\ has\ changed\ or\ not\r\n\ \r\n\ @return\ \ \ \ \ \ \ \ \ \ True\ if\ the\ Map\ has\ changed\ during\ this\ act\r\n
comment17.params=changed
comment17.target=void\ setChanged(boolean)
comment17.text=\r\n\ Sets\ the\ value\ for\ changed\r\n\ \r\n\ @param\ changed\ \ \ The\ new\ value\ for\ changed\r\n
comment18.params=
comment18.target=Cell[][]\ getCells()
comment18.text=\r\n\ Returns\ all\ Cells\ within\ the\ Map\r\n\ \r\n\ @return\ \ \ \ \ \ All\ the\ Cells\ contained\ within\ this\ Map\r\n
comment19.params=
comment19.target=int\ getViewX()
comment19.text=\r\n\ Returns\ the\ minimum\ x\ value\ of\ the\ viewing\ area\r\n\ \r\n\ @return\ \ \ \ \ \ The\ minimum\ x\ value\ of\ the\ viewing\ area\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ \ Checks\ if\ the\ map\ required\ panning,\ as\ well\ as\ handling\ user\ input.\r\n\ \ Called\ before\ every\ frame\ is\ rendered.\r\n
comment20.params=
comment20.target=int\ getViewY()
comment20.text=\r\n\ Returns\ the\ minimum\ y\ value\ of\ the\ viewing\ area\r\n\ \r\n\ @return\ \ \ \ \ \ The\ minimum\ y\ value\ of\ the\ viewing\ area\r\n
comment21.params=viewX
comment21.target=void\ setViewX(int)
comment21.text=\r\n\ @param\ viewX\ \ \ \ \ The\ min\ x\ value\ for\ the\ view\ area\r\n
comment22.params=viewY
comment22.target=void\ setViewY(int)
comment22.text=\r\n\ Returns\ the\ minimum\ y\ value\ for\ the\ view\ area\r\n\ \r\n\ @param\ viewX\ \ \ \ \ The\ min\ y\ value\ for\ the\ view\ area\r\n
comment23.params=temp
comment23.target=void\ manualImageResize(Unit)
comment3.params=world
comment3.target=void\ setupFrame(greenfoot.World)
comment3.text=\r\n\ Sets\ up\ the\ Frame\ for\ the\ Map.\r\n
comment4.params=world
comment4.target=void\ setupCells(greenfoot.World)
comment4.text=\r\n\ Sets\ up\ the\ initial\ cells\ within\ the\ map.\ Should\ be\ during\ initialization\ only.\r\n\ \r\n\ @param\ world\ \ \ \ \ The\ World\ that\ the\ Map\ will\ be\ added\ to\r\n
comment5.params=
comment5.target=void\ setupPathfinding()
comment5.text=\r\n\ Sets\ up\ the\ Cells\ for\ pathfinding\ by\ assigning\ the\ neighbours.\r\n
comment6.params=world
comment6.target=void\ placeCells(greenfoot.World)
comment6.text=\r\n\ Places\ the\ Cells\ in\ the\ appropriate\ location.\r\n\ \r\n\ @param\ world\ \ \ \ \ The\ world\ to\ place\ the\ Cell\ in\r\n
comment7.params=stream
comment7.target=void\ readObject(java.io.ObjectInputStream)
comment7.text=\r\n\ Called\ during\ deserialization\ to\ restore\ transient\ fields.\r\n\ \r\n\ @param\ stream\ \ \ \ The\ input\ stream\ given\ during\ deserialization\r\n
comment8.params=xChange\ yChange
comment8.target=void\ pan(int,\ int)
comment8.text=\r\n\ Pans\ the\ map\ to\ the\ given\ x\ and\ y\ coordinate\ changes\ if\r\n\ possible\ (won't\ go\ over).\r\n\ \r\n\ @param\ xChange\ \ \ \ \ \ \ The\ change\ in\ the\ x\ axis\r\n\ @param\ yChange\ \ \ \ \ \ \ The\ change\ in\ the\ y\ axis\r\n
comment9.params=
comment9.target=void\ calculateCellPositions()
comment9.text=\r\n\ Calculates\ the\ position\ that\ each\ cell\ should\ be\ on\ the\ screen\r\n\ based\ on\ the\ viewing\ coordinates\ and\ cell\ size.\ \r\n
numComments=24
